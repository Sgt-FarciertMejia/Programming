https://cted.cybbh.io/tech-college/pns/public/pns/latest/guides/bash_sg.html //Student Guide Bash
10.50.40.84 (ctfd base challenges)
Resources ss64, linuxhandbook.com, regex101, unix.stackexchange.com, baeldung.com/linux/bash-single-vs-double-brackets (for single &| double quotes), phoenixnap.com/kb/bash-printf (printf help),linuxhandbook.com/find-exec-command/,gnu.org
ls -1 (-lisa) (displays 1 thing in a list)
touch -t (specifies time to chnge timestamp on file yyyymmddhhmm.ss)
umask (discover default perms)
chmod 777 (iot run bash scripts) (chmod +x?)
bash scripts ext. are .sh
rm to remove file -r for recursive -f forces remove
rmdir to remove dir -p will also kill parent dir
pwd (print working dir)
ls ~/*.log (list files w/ .log)
cp source dest
mv source dest (used to rename or move files)
find [directory to search] [options] [expression
/etc/passwd (need to know and fields)
cat more less (remember less is more) ent is 1 line, space is 1 page
find -iname (case insens)
find -inum # (inode #)
find -size x (size of file)
find -empty 
find -size +x -x
find -gid x or find uid x
find -group name or find -user
find / -maxdepth x (specifies how many dirs to search)
find /home/student *.txt -maxdepth 1 (example)
find / -type d (dir) find / -type f (file)
find -name \*.txt
find /var/log/ -iname *.log -exec ls -al {} 2>/dev/null \;
find /var/log/ -iname *.log -exec ls -al {} 2>/dev/null +
find -path
find -printf %i (inode #) or %f (filename) (have used in class as find / -inum x -printf "%f\n")
sudo !! (runs previous command as root)
find -atime/ctime/mtime -x (= days) find -amin/cmin/mmin -x (= mins) (a = accessed m = mod c = changed)
grep -c (counts  matches)
grep -v (shows everything that doesnt match)
grep -E or egrep (regex)
grep -i (case insens) 
grep -n (line numbers)
mkdir ~/bash/day1/11{23,34,45,56} (brace expansion (makes a lor of dirs)) (another example mkdir /root/11{1..5}.txt /root/11{6..9}~.txt)

find ~/1123/ -name \*.txt ! -name \*~* -exec cp {} ~/CUT \; (explanation {} is a place holder for the find command find came first because files had to be found iot cp must end w/ \; or +, {}buffer is a requirement thats the curly braces remember + shoots all \; is one by one)
find /var -empty -printf "%i %f\n" (-printf think print format)
cat fakepasswd | cut -d: -f1 (cut is to cut out or to display what -d is delimeter and has to be what fields are seperated by in file and -f1 is just field 1)
cat fakepasswd | cut -d: -f3- (only displays that field and everything after so for this it will start at f3 onward)
cat fakepasswd | cut -d: -f3 -s (only that field -s means strict)
ls -l ~/CUT | cut -d" " -f9 | cut -d "." -f1- -s > $HOME/CUT/names (ls -l ~/CUT will long list said dir first pipe gets me desired field where file names and dirs are next pipe omits dirs by searching for -d "." -f1- will start at file name and display extension -s will strictly enforce -d)
egrep -o "[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}" StoryHiddenIPs (-o only displays matches no -o will just display whole file w/ matches highlighted)
egrep -o "[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}" StoryHiddenIPs | sort (sort is a command that organizes?)
egrep -o "[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}\.[[:digit:]]{1,3}" StoryHiddenIPs | sort | uniq -c | sort -r (uniq command that removes repeats? -c option counts repetions sort -r is needed bc sort will sort least to most think of -r is reverse so most to least)
awk -F: '{print $1}' fakepasswd (awk -F: is very similar to cut -d: and '{print $1}' very simialr to -f1)
awk -F: 'BEGIN {OFS="#"} {print $1, $3}' fakepasswd (OFS="#" this makes the field seperater # {print $1, $3} prints fields 1 and 3 and will be seperated by output field sep previously stated in this case its #)
awk -v (calling a variable)
sort -u (newer command merges sort and uniq) for older machines sort | uniq (previous sort -u) (in is numbers -r is numerically reversed(big numbers first))
sort -t : (field seperater :)
sort -k 1 (will sort kolumn 1)
cat fakepasswd | sort -t: -nr -k 3 (shows everything but does sort kolumn 3 and displays file as such)
uniq (iot use uniq stuff must be sorted uniq is always after sort)
uniq -c (counts how many times uniq stuff appears)
sed -e (expression for multiple sed patterns) S (substituition start pattern) g (for global (lowercase)) d (lowercase deletes whole line for every instance) $ (means end of line) 
sed -e 's/chicken/hamburger/g' -e 's/pepperoni/sausage' pizza.txt (chicken is being replaced by hamburger in every instance as well as repalces pepp for sausage)
sed is a stream editor tool

shebang line first line in bash script #!/bin/bash (for example script spaces between brackets fucken matter)
A=$(cat /etc/passwd)
echo $A
if statements must end with an fi 
        #!/bin/bash
        contents=$(cat simple2.txt)
        if [[ $contents == "tacos" ]]; then
          echo only on tuesdays
        elif [[$contents == "costco" ]]; then
          echo is cool but expensive
        elif [[ 4contents == "troopstore" ]]; then
          echo always crowded
        else
          echo no tax at commissary
        fi

      #!/bin/bash
      for x in $(cat songs); do #list out the songs in the song file
        echo $x
      done
command substitution
  A=$(cat /etc/passwd) (for command sub $ is after = and command is parenthesis)
tar -czf
rev command just reverses output u can rev | <command> |rev and reverse output to be backwards last/second rev fixes output
     ex)  find /$HOME -name "*.bin" -type f 2>/dev/null | rev | cut -d/ -f2- -s | rev

sort -t: -k3 -n (sort the -t option is for delimeter -k is for kolumn and it will sort that file basing sorting on the specified kolumn -n is bc it was working w/ #s in this ex)
wc -l (word count is a command to count words -l will make it count lines)
